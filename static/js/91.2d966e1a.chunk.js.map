{"version":3,"file":"static/js/91.2d966e1a.chunk.js","mappings":"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","sources":["util/optional-js/Optional.ts","../node_modules/optional-js/index.js","../node_modules/optional-js/lib/optional.js"],"sourcesContent":["import Optional from \"optional-js\";\n\ndeclare module 'optional-js' {\n    export default interface Optional<T> {\n        compose<T2>(other: Optional<T2>): Optional<[T, T2]>\n\n        orUndefined(): T | undefined;\n\n        orNull(): T | null;\n    }\n}\n\nconst optional = Optional.empty();\nObject.getPrototypeOf(optional).compose = function compose(this: Optional<any>, other: Optional<any>) {\n    return this.isPresent() && other.isPresent()\n        ? Optional.of([this.get(), other.get()])\n        : Optional.empty()\n}\nObject.getPrototypeOf(optional).orUndefined = function orUndefined(this: Optional<any>) {\n    return this.isPresent() ? this.get() : undefined\n}\nObject.getPrototypeOf(optional).orNull = function orNull(this: Optional<any>) {\n    return this.isPresent() ? this.get() : null\n}\n\nexport const opt = Optional.ofNullable\n\nexport function valueMap<T, R>(value: T, fun: (value: T) => R): R {\n    return fun(value)\n}","var Optional = require('./lib/optional.js');\n\nmodule.exports = {\n    empty: function empty() {\n        return new Optional();\n    },\n    of: function of(value) {\n        if (value === undefined || value === null) {\n            throw new Error('value is not defined');\n        }\n        return new Optional(value);\n    },\n    ofNullable: function ofNullable(value) {\n        return new Optional(value);\n    }\n};\n","function Optional(value) {\n    this._value = value;\n}\n\nOptional.prototype = {\n    get: function get() {\n        if (isNull(this._value)) {\n            throw new Error('optional is empty');\n        }\n        return this._value;\n    },\n    isPresent: function isPresent() {\n        return !isNull(this._value);\n    },\n    ifPresent: function ifPresent(consumer) {\n        if (!isNull(this._value)) {\n            if (!isFunction(consumer)) {\n                throw new Error('consumer is not a function');\n            }\n            consumer(this._value);\n        }\n    },\n    filter: function filter(predicate) {\n        if (!isFunction(predicate)) {\n            throw new Error('predicate is not a function');\n        }\n        if (!isNull(this._value) && predicate(this._value)) {\n            return new Optional(this._value);\n        }\n        return new Optional();\n    },\n    map: function map(mapper) {\n        var mappedValue;\n\n        if (!isFunction(mapper)) {\n            throw new Error('mapper is not a function');\n        }\n\n        if (isNull(this._value)) {\n            return new Optional();\n        }\n\n        mappedValue = mapper(this._value);\n\n        return isNull(mappedValue) ? new Optional() : new Optional(mappedValue);\n    },\n    flatMap: function flatMap(mapper) {\n        var flatMappedValue;\n\n        if (!isFunction(mapper)) {\n            throw new Error('mapper is not a function');\n        }\n\n        if (isNull(this._value)) {\n            return new Optional();\n        }\n\n        flatMappedValue = mapper(this._value);\n\n        if (isNull(flatMappedValue) || isNull(flatMappedValue.get)) {\n            throw new Error('mapper does not return an Optional');\n        }\n\n        return flatMappedValue;\n    },\n    peek: function peek(peeker) {\n        if (!isFunction(peeker)) {\n            throw new Error('peeker is not a function');\n        }\n\n        if (isNull(this._value)) {\n            return new Optional();\n        }\n\n        peeker(this._value);\n\n        return new Optional(this._value);\n    },\n    orElse: function orElse(other) {\n        return isNull(this._value) ? other : this._value;\n    },\n    orElseGet: function orElseGet(supplier) {\n        if (!isFunction(supplier)) {\n            throw new Error('supplier is not a function');\n        }\n        if (isNull(this._value)) {\n            return supplier();\n        } else {\n            return this._value;\n        }\n    },\n    orElseThrow: function orElseThrow(exceptionSupplier) {\n        if (isNull(this._value)) {\n            if (!isFunction(exceptionSupplier)) {\n                throw new Error('exception provider is not a function');\n            }\n\n            throw exceptionSupplier();\n        }\n        return this._value;\n    },\n    ifPresentOrElse: function ifPresentOrElse(action, emptyAction) {\n        if (!isNull(this._value)) {\n            if (!isFunction(action)) {\n                throw new Error('action is not a function')\n            }\n            action(this._value)\n        } else {\n            if (!isFunction(emptyAction)) {\n                throw new Error('emptyAction is not a function')\n            }\n            emptyAction();\n        }\n    },\n    or: function or(optionalSupplier) {\n        if (isNull(this._value)) {\n            if (!isFunction(optionalSupplier)) {\n                throw new Error('optionalSupplier is not a function')\n            }\n            return optionalSupplier();\n        }\n        return this;\n    },\n    hashCode: function hashMap() {\n        // Here just to complete the Java Optional API.\n        return -1;\n    }\n};\n\nfunction isNull(value) {\n    return (value === undefined || value === null);\n}\n\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\n\nmodule.exports = Optional;\n"],"names":["optional","Optional","Object","getPrototypeOf","compose","other","this","isPresent","get","orUndefined","undefined","orNull","opt","valueMap","value","fun","require","module","exports","empty","of","Error","ofNullable","_value","isNull","isFunction","prototype","ifPresent","consumer","filter","predicate","map","mapper","mappedValue","flatMap","flatMappedValue","peek","peeker","orElse","orElseGet","supplier","orElseThrow","exceptionSupplier","ifPresentOrElse","action","emptyAction","or","optionalSupplier","hashCode"],"sourceRoot":""}